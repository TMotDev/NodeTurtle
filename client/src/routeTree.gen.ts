/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as ResetTokenImport } from './routes/reset/$token'
import { Route as DeactivateTokenImport } from './routes/deactivate/$token'
import { Route as ActivateTokenImport } from './routes/activate/$token'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResetTokenRoute = ResetTokenImport.update({
  id: '/reset/$token',
  path: '/reset/$token',
  getParentRoute: () => rootRoute,
} as any)

const DeactivateTokenRoute = DeactivateTokenImport.update({
  id: '/deactivate/$token',
  path: '/deactivate/$token',
  getParentRoute: () => rootRoute,
} as any)

const ActivateTokenRoute = ActivateTokenImport.update({
  id: '/activate/$token',
  path: '/activate/$token',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/activate/$token': {
      id: '/activate/$token'
      path: '/activate/$token'
      fullPath: '/activate/$token'
      preLoaderRoute: typeof ActivateTokenImport
      parentRoute: typeof rootRoute
    }
    '/deactivate/$token': {
      id: '/deactivate/$token'
      path: '/deactivate/$token'
      fullPath: '/deactivate/$token'
      preLoaderRoute: typeof DeactivateTokenImport
      parentRoute: typeof rootRoute
    }
    '/reset/$token': {
      id: '/reset/$token'
      path: '/reset/$token'
      fullPath: '/reset/$token'
      preLoaderRoute: typeof ResetTokenImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/activate/$token': typeof ActivateTokenRoute
  '/deactivate/$token': typeof DeactivateTokenRoute
  '/reset/$token': typeof ResetTokenRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/activate/$token': typeof ActivateTokenRoute
  '/deactivate/$token': typeof DeactivateTokenRoute
  '/reset/$token': typeof ResetTokenRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/activate/$token': typeof ActivateTokenRoute
  '/deactivate/$token': typeof DeactivateTokenRoute
  '/reset/$token': typeof ResetTokenRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/activate/$token'
    | '/deactivate/$token'
    | '/reset/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/activate/$token'
    | '/deactivate/$token'
    | '/reset/$token'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/register'
    | '/activate/$token'
    | '/deactivate/$token'
    | '/reset/$token'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ActivateTokenRoute: typeof ActivateTokenRoute
  DeactivateTokenRoute: typeof DeactivateTokenRoute
  ResetTokenRoute: typeof ResetTokenRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ActivateTokenRoute: ActivateTokenRoute,
  DeactivateTokenRoute: DeactivateTokenRoute,
  ResetTokenRoute: ResetTokenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/register",
        "/activate/$token",
        "/deactivate/$token",
        "/reset/$token"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/activate/$token": {
      "filePath": "activate/$token.tsx"
    },
    "/deactivate/$token": {
      "filePath": "deactivate/$token.tsx"
    },
    "/reset/$token": {
      "filePath": "reset/$token.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
